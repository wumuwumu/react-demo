{"ast":null,"code":"var _jsxFileName = \"/Users/wumu/web/html/project/react-demo/src/container/echart/Map.js\";\nimport React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nrequire('echarts/map/js/china.js');\n\nexport default class Map extends Component {\n  constructor(props) {\n    super(props);\n    this.timeTicket = null;\n\n    this.getInitialState = () => ({\n      option: this.getOption()\n    });\n\n    this.getOption = () => {\n      return {\n        title: {\n          text: 'iphone销量',\n          subtext: '纯属虚构',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: ['iphone3', 'iphone4', 'iphone5']\n        },\n        visualMap: {\n          min: 0,\n          max: 2500,\n          left: 'left',\n          top: 'bottom',\n          text: ['高', '低'],\n          // 文本，默认为数值文本\n          calculable: true\n        },\n        toolbox: {\n          show: true,\n          orient: 'vertical',\n          left: 'right',\n          top: 'center',\n          feature: {\n            dataView: {\n              readOnly: false\n            },\n            restore: {},\n            saveAsImage: {}\n          }\n        },\n        series: [{\n          name: 'iphone3',\n          type: 'map',\n          mapType: 'china',\n          roam: false,\n          label: {\n            normal: {\n              show: true\n            },\n            emphasis: {\n              show: true\n            }\n          },\n          data: [{\n            name: '北京',\n            value: this.randomData()\n          }, {\n            name: '天津',\n            value: this.randomData()\n          }, {\n            name: '上海',\n            value: this.randomData()\n          }, {\n            name: '重庆',\n            value: this.randomData()\n          }, {\n            name: '河北',\n            value: this.randomData()\n          }, {\n            name: '河南',\n            value: this.randomData()\n          }, {\n            name: '云南',\n            value: this.randomData()\n          }, {\n            name: '辽宁',\n            value: this.randomData()\n          }, {\n            name: '黑龙江',\n            value: this.randomData()\n          }, {\n            name: '湖南',\n            value: this.randomData()\n          }, {\n            name: '安徽',\n            value: this.randomData()\n          }, {\n            name: '山东',\n            value: this.randomData()\n          }, {\n            name: '新疆',\n            value: this.randomData()\n          }, {\n            name: '江苏',\n            value: this.randomData()\n          }, {\n            name: '浙江',\n            value: this.randomData()\n          }, {\n            name: '江西',\n            value: this.randomData()\n          }, {\n            name: '湖北',\n            value: this.randomData()\n          }, {\n            name: '广西',\n            value: this.randomData()\n          }, {\n            name: '甘肃',\n            value: this.randomData()\n          }, {\n            name: '山西',\n            value: this.randomData()\n          }, {\n            name: '内蒙古',\n            value: this.randomData()\n          }, {\n            name: '陕西',\n            value: this.randomData()\n          }, {\n            name: '吉林',\n            value: this.randomData()\n          }, {\n            name: '福建',\n            value: this.randomData()\n          }, {\n            name: '贵州',\n            value: this.randomData()\n          }, {\n            name: '广东',\n            value: this.randomData()\n          }, {\n            name: '青海',\n            value: this.randomData()\n          }, {\n            name: '西藏',\n            value: this.randomData()\n          }, {\n            name: '四川',\n            value: this.randomData()\n          }, {\n            name: '宁夏',\n            value: this.randomData()\n          }, {\n            name: '海南',\n            value: this.randomData()\n          }, {\n            name: '台湾',\n            value: this.randomData()\n          }, {\n            name: '香港',\n            value: this.randomData()\n          }, {\n            name: '澳门',\n            value: this.randomData()\n          }]\n        }, {\n          name: 'iphone4',\n          type: 'map',\n          mapType: 'china',\n          label: {\n            normal: {\n              show: true\n            },\n            emphasis: {\n              show: true\n            }\n          },\n          data: [{\n            name: '北京',\n            value: this.randomData()\n          }, {\n            name: '天津',\n            value: this.randomData()\n          }, {\n            name: '上海',\n            value: this.randomData()\n          }, {\n            name: '重庆',\n            value: this.randomData()\n          }, {\n            name: '河北',\n            value: this.randomData()\n          }, {\n            name: '安徽',\n            value: this.randomData()\n          }, {\n            name: '新疆',\n            value: this.randomData()\n          }, {\n            name: '浙江',\n            value: this.randomData()\n          }, {\n            name: '江西',\n            value: this.randomData()\n          }, {\n            name: '山西',\n            value: this.randomData()\n          }, {\n            name: '内蒙古',\n            value: this.randomData()\n          }, {\n            name: '吉林',\n            value: this.randomData()\n          }, {\n            name: '福建',\n            value: this.randomData()\n          }, {\n            name: '广东',\n            value: this.randomData()\n          }, {\n            name: '西藏',\n            value: this.randomData()\n          }, {\n            name: '四川',\n            value: this.randomData()\n          }, {\n            name: '宁夏',\n            value: this.randomData()\n          }, {\n            name: '香港',\n            value: this.randomData()\n          }, {\n            name: '澳门',\n            value: this.randomData()\n          }]\n        }, {\n          name: 'iphone5',\n          type: 'map',\n          mapType: 'china',\n          label: {\n            normal: {\n              show: true\n            },\n            emphasis: {\n              show: true\n            }\n          },\n          data: [{\n            name: '北京',\n            value: this.randomData()\n          }, {\n            name: '天津',\n            value: this.randomData()\n          }, {\n            name: '上海',\n            value: this.randomData()\n          }, {\n            name: '广东',\n            value: this.randomData()\n          }, {\n            name: '台湾',\n            value: this.randomData()\n          }, {\n            name: '香港',\n            value: this.randomData()\n          }, {\n            name: '澳门',\n            value: this.randomData()\n          }]\n        }]\n      };\n    };\n\n    this.state = this.getInitialState();\n  }\n\n  componentDidMount() {\n    if (this.timeTicket) {\n      clearInterval(this.timeTicket);\n    }\n\n    this.timeTicket = setInterval(() => {\n      const option = this.state.option;\n      const r = new Date().getSeconds();\n      option.title.text = 'iphone销量' + r;\n      option.series[0].name = 'iphone销量' + r;\n      option.legend.data[0] = 'iphone销量' + r;\n      this.setState({\n        option: option\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timeTicket) {\n      clearInterval(this.timeTicket);\n    }\n  }\n\n  randomData() {\n    return Math.round(Math.random() * 1000);\n  }\n\n  render() {\n    const code = \"require('echarts/map/js/china.js'); \\n\" + \"<ReactEcharts \\n\" + \"  option={this.state.option || {}} \\n\" + \"  style={{height: '350px', width: '100%'}}  \\n\" + \"  className='react_for_echarts' />\";\n    return React.createElement(\"div\", {\n      className: \"examples\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \" render a china map. \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"MAP charts\"), \": \"), React.createElement(ReactEcharts, {\n      option: this.state.option,\n      style: {\n        height: '500px',\n        width: '500px'\n      },\n      className: \"react_for_echarts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \" code below: \"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, code))));\n  }\n\n}","map":{"version":3,"sources":["/Users/wumu/web/html/project/react-demo/src/container/echart/Map.js"],"names":["React","Component","ReactEcharts","require","Map","constructor","props","timeTicket","getInitialState","option","getOption","title","text","subtext","left","tooltip","trigger","legend","orient","data","visualMap","min","max","top","calculable","toolbox","show","feature","dataView","readOnly","restore","saveAsImage","series","name","type","mapType","roam","label","normal","emphasis","value","randomData","state","componentDidMount","clearInterval","setInterval","r","Date","getSeconds","setState","componentWillUnmount","Math","round","random","render","code","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEAC,OAAO,CAAC,yBAAD,CAAP;;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAInBC,UAJmB,GAIN,IAJM;;AAAA,SAKnBC,eALmB,GAKD,OAAO;AAACC,MAAAA,MAAM,EAAE,KAAKC,SAAL;AAAT,KAAP,CALC;;AAAA,SA4BnBA,SA5BmB,GA4BP,MAAM;AAChB,aAAO;AACLC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,UADD;AAELC,UAAAA,OAAO,EAAE,MAFJ;AAGLC,UAAAA,IAAI,EAAE;AAHD,SADF;AAMLC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE;AADF,SANJ;AASLC,QAAAA,MAAM,EAAE;AACNC,UAAAA,MAAM,EAAE,UADF;AAENJ,UAAAA,IAAI,EAAE,MAFA;AAGNK,UAAAA,IAAI,EAAC,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB;AAHC,SATH;AAcLC,QAAAA,SAAS,EAAE;AACTC,UAAAA,GAAG,EAAE,CADI;AAETC,UAAAA,GAAG,EAAE,IAFI;AAGTR,UAAAA,IAAI,EAAE,MAHG;AAITS,UAAAA,GAAG,EAAE,QAJI;AAKTX,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAK,GAAL,CALG;AAKc;AACvBY,UAAAA,UAAU,EAAE;AANH,SAdN;AAsBLC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,IADC;AAEPR,UAAAA,MAAM,EAAE,UAFD;AAGPJ,UAAAA,IAAI,EAAE,OAHC;AAIPS,UAAAA,GAAG,EAAE,QAJE;AAKPI,UAAAA,OAAO,EAAE;AACPC,YAAAA,QAAQ,EAAE;AAACC,cAAAA,QAAQ,EAAE;AAAX,aADH;AAEPC,YAAAA,OAAO,EAAE,EAFF;AAGPC,YAAAA,WAAW,EAAE;AAHN;AALF,SAtBJ;AAiCLC,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,IAAI,EAAE,SADR;AAEEC,UAAAA,IAAI,EAAE,KAFR;AAGEC,UAAAA,OAAO,EAAE,OAHX;AAIEC,UAAAA,IAAI,EAAE,KAJR;AAKEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,MAAM,EAAE;AACNZ,cAAAA,IAAI,EAAE;AADA,aADH;AAILa,YAAAA,QAAQ,EAAE;AACRb,cAAAA,IAAI,EAAE;AADE;AAJL,WALT;AAaEP,UAAAA,IAAI,EAAC,CACH;AAACc,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WADG,EAEH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAFG,EAGH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAHG,EAIH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAJG,EAKH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WALG,EAMH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WANG,EAOH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAPG,EAQH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WARG,EASH;AAACR,YAAAA,IAAI,EAAE,KAAP;AAAaO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAApB,WATG,EAUH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAVG,EAWH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAXG,EAYH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAZG,EAaH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAbG,EAcH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAdG,EAeH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAfG,EAgBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAhBG,EAiBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAjBG,EAkBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAlBG,EAmBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAnBG,EAoBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WApBG,EAqBH;AAACR,YAAAA,IAAI,EAAE,KAAP;AAAaO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAApB,WArBG,EAsBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAtBG,EAuBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAvBG,EAwBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAxBG,EAyBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAzBG,EA0BH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WA1BG,EA2BH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WA3BG,EA4BH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WA5BG,EA6BH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WA7BG,EA8BH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WA9BG,EA+BH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WA/BG,EAgCH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAhCG,EAiCH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAjCG,EAkCH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAlCG;AAbP,SADM,EAmDN;AACER,UAAAA,IAAI,EAAE,SADR;AAEEC,UAAAA,IAAI,EAAE,KAFR;AAGEC,UAAAA,OAAO,EAAE,OAHX;AAIEE,UAAAA,KAAK,EAAE;AACLC,YAAAA,MAAM,EAAE;AACNZ,cAAAA,IAAI,EAAE;AADA,aADH;AAILa,YAAAA,QAAQ,EAAE;AACRb,cAAAA,IAAI,EAAE;AADE;AAJL,WAJT;AAYEP,UAAAA,IAAI,EAAC,CACH;AAACc,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WADG,EAEH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAFG,EAGH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAHG,EAIH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAJG,EAKH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WALG,EAMH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WANG,EAOH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAPG,EAQH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WARG,EASH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WATG,EAUH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAVG,EAWH;AAACR,YAAAA,IAAI,EAAE,KAAP;AAAaO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAApB,WAXG,EAYH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAZG,EAaH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAbG,EAcH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAdG,EAeH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAfG,EAgBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAhBG,EAiBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAjBG,EAkBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAlBG,EAmBH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAnBG;AAZP,SAnDM,EAqFN;AACER,UAAAA,IAAI,EAAE,SADR;AAEEC,UAAAA,IAAI,EAAE,KAFR;AAGEC,UAAAA,OAAO,EAAE,OAHX;AAIEE,UAAAA,KAAK,EAAE;AACLC,YAAAA,MAAM,EAAE;AACNZ,cAAAA,IAAI,EAAE;AADA,aADH;AAILa,YAAAA,QAAQ,EAAE;AACRb,cAAAA,IAAI,EAAE;AADE;AAJL,WAJT;AAYEP,UAAAA,IAAI,EAAC,CACH;AAACc,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WADG,EAEH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAFG,EAGH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAHG,EAIH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAJG,EAKH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WALG,EAMH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WANG,EAOH;AAACR,YAAAA,IAAI,EAAE,IAAP;AAAYO,YAAAA,KAAK,EAAE,KAAKC,UAAL;AAAnB,WAPG;AAZP,SArFM;AAjCH,OAAP;AA8ID,KA3KkB;;AAEjB,SAAKC,KAAL,GAAa,KAAKlC,eAAL,EAAb;AACD;;AAIDmC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKpC,UAAT,EAAqB;AACnBqC,MAAAA,aAAa,CAAC,KAAKrC,UAAN,CAAb;AACD;;AACD,SAAKA,UAAL,GAAkBsC,WAAW,CAAC,MAAM;AAClC,YAAMpC,MAAM,GAAG,KAAKiC,KAAL,CAAWjC,MAA1B;AACA,YAAMqC,CAAC,GAAG,IAAIC,IAAJ,GAAWC,UAAX,EAAV;AACAvC,MAAAA,MAAM,CAACE,KAAP,CAAaC,IAAb,GAAoB,aAAakC,CAAjC;AACArC,MAAAA,MAAM,CAACuB,MAAP,CAAc,CAAd,EAAiBC,IAAjB,GAAwB,aAAaa,CAArC;AACArC,MAAAA,MAAM,CAACQ,MAAP,CAAcE,IAAd,CAAmB,CAAnB,IAAwB,aAAa2B,CAArC;AACA,WAAKG,QAAL,CAAc;AAAExC,QAAAA,MAAM,EAAEA;AAAV,OAAd;AACD,KAP4B,EAO1B,IAP0B,CAA7B;AAQD;;AACDyC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAK3C,UAAT,EAAqB;AACnBqC,MAAAA,aAAa,CAAC,KAAKrC,UAAN,CAAb;AACD;AACF;;AACDkC,EAAAA,UAAU,GAAG;AACX,WAAOU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,IAAzB,CAAP;AACD;;AAiJDC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,2CACP,kBADO,GAEP,uCAFO,GAGP,gDAHO,GAIP,oCAJN;AAKA,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA5B,OADF,EAEE,oBAAC,YAAD;AACE,MAAA,MAAM,EAAE,KAAKb,KAAL,CAAWjC,MADrB;AAEE,MAAA,KAAK,EAAE;AAAC+C,QAAAA,MAAM,EAAE,OAAT;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAFT;AAGE,MAAA,SAAS,EAAC,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,IAAP,CADF,CAPF,CADF,CADF;AAeD;;AAlMwC","sourcesContent":["import React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react'; \n\nrequire('echarts/map/js/china.js');\n\nexport default class Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialState();\n  }\n  timeTicket = null;\n  getInitialState = () => ({option: this.getOption()});\n\n  componentDidMount() {\n    if (this.timeTicket) {\n      clearInterval(this.timeTicket);\n    }\n    this.timeTicket = setInterval(() => {\n      const option = this.state.option;\n      const r = new Date().getSeconds();\n      option.title.text = 'iphone销量' + r;\n      option.series[0].name = 'iphone销量' + r;\n      option.legend.data[0] = 'iphone销量' + r;\n      this.setState({ option: option });\n    }, 1000);\n  };\n  componentWillUnmount() {\n    if (this.timeTicket) {\n      clearInterval(this.timeTicket);\n    }\n  };\n  randomData() {\n    return Math.round(Math.random()*1000);\n  };\n  getOption = () => {\n    return {\n      title: {\n        text: 'iphone销量',\n        subtext: '纯属虚构',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left',\n        data:['iphone3','iphone4','iphone5']\n      },\n      visualMap: {\n        min: 0,\n        max: 2500,\n        left: 'left',\n        top: 'bottom',\n        text: ['高','低'],       // 文本，默认为数值文本\n        calculable: true\n      },\n      toolbox: {\n        show: true,\n        orient: 'vertical',\n        left: 'right',\n        top: 'center',\n        feature: {\n          dataView: {readOnly: false},\n          restore: {},\n          saveAsImage: {}\n        }\n      },\n      series: [\n        {\n          name: 'iphone3',\n          type: 'map',\n          mapType: 'china',\n          roam: false,\n          label: {\n            normal: {\n              show: true\n            },\n            emphasis: {\n              show: true\n            }\n          },\n          data:[\n            {name: '北京',value: this.randomData() },\n            {name: '天津',value: this.randomData() },\n            {name: '上海',value: this.randomData() },\n            {name: '重庆',value: this.randomData() },\n            {name: '河北',value: this.randomData() },\n            {name: '河南',value: this.randomData() },\n            {name: '云南',value: this.randomData() },\n            {name: '辽宁',value: this.randomData() },\n            {name: '黑龙江',value: this.randomData() },\n            {name: '湖南',value: this.randomData() },\n            {name: '安徽',value: this.randomData() },\n            {name: '山东',value: this.randomData() },\n            {name: '新疆',value: this.randomData() },\n            {name: '江苏',value: this.randomData() },\n            {name: '浙江',value: this.randomData() },\n            {name: '江西',value: this.randomData() },\n            {name: '湖北',value: this.randomData() },\n            {name: '广西',value: this.randomData() },\n            {name: '甘肃',value: this.randomData() },\n            {name: '山西',value: this.randomData() },\n            {name: '内蒙古',value: this.randomData() },\n            {name: '陕西',value: this.randomData() },\n            {name: '吉林',value: this.randomData() },\n            {name: '福建',value: this.randomData() },\n            {name: '贵州',value: this.randomData() },\n            {name: '广东',value: this.randomData() },\n            {name: '青海',value: this.randomData() },\n            {name: '西藏',value: this.randomData() },\n            {name: '四川',value: this.randomData() },\n            {name: '宁夏',value: this.randomData() },\n            {name: '海南',value: this.randomData() },\n            {name: '台湾',value: this.randomData() },\n            {name: '香港',value: this.randomData() },\n            {name: '澳门',value: this.randomData() }\n          ]\n        },\n        {\n          name: 'iphone4',\n          type: 'map',\n          mapType: 'china',\n          label: {\n            normal: {\n              show: true\n            },\n            emphasis: {\n              show: true\n            }\n          },\n          data:[\n            {name: '北京',value: this.randomData() },\n            {name: '天津',value: this.randomData() },\n            {name: '上海',value: this.randomData() },\n            {name: '重庆',value: this.randomData() },\n            {name: '河北',value: this.randomData() },\n            {name: '安徽',value: this.randomData() },\n            {name: '新疆',value: this.randomData() },\n            {name: '浙江',value: this.randomData() },\n            {name: '江西',value: this.randomData() },\n            {name: '山西',value: this.randomData() },\n            {name: '内蒙古',value: this.randomData() },\n            {name: '吉林',value: this.randomData() },\n            {name: '福建',value: this.randomData() },\n            {name: '广东',value: this.randomData() },\n            {name: '西藏',value: this.randomData() },\n            {name: '四川',value: this.randomData() },\n            {name: '宁夏',value: this.randomData() },\n            {name: '香港',value: this.randomData() },\n            {name: '澳门',value: this.randomData() }\n          ]\n        },\n        {\n          name: 'iphone5',\n          type: 'map',\n          mapType: 'china',\n          label: {\n            normal: {\n              show: true\n            },\n            emphasis: {\n              show: true\n            }\n          },\n          data:[\n            {name: '北京',value: this.randomData() },\n            {name: '天津',value: this.randomData() },\n            {name: '上海',value: this.randomData() },\n            {name: '广东',value: this.randomData() },\n            {name: '台湾',value: this.randomData() },\n            {name: '香港',value: this.randomData() },\n            {name: '澳门',value: this.randomData() }\n          ]\n        }\n      ]\n    };\n  };\n  render() {\n    const code = \"require('echarts/map/js/china.js'); \\n\" +\n          \"<ReactEcharts \\n\" +\n          \"  option={this.state.option || {}} \\n\" +\n          \"  style={{height: '350px', width: '100%'}}  \\n\" +\n          \"  className='react_for_echarts' />\";\n    return (\n      <div className='examples'>\n        <div className='parent'>\n          <label> render a china map. <strong>MAP charts</strong>: </label>\n          <ReactEcharts\n            option={this.state.option}\n            style={{height: '500px', width: '500px'}}\n            className='react_for_echarts' />\n          <label> code below: </label>\n          <pre>\n            <code>{code}</code>\n          </pre>\n        </div>\n      </div>\n    );\n  };\n}"]},"metadata":{},"sourceType":"module"}